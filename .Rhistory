est0}, error  =  function(cond) {
mu=list()
mu[[1]] = rep(NA,p)
Q=list()
Q[[1]] = rep(NA,p*q)
theta2 = NA
sigma2i = list()
sigma2i[[1]] = NA
G=rep(NA,n)
list(mu=mu,Q=Q,theta2=theta2,sigma2i=sigma2i)
})
#table(est1$G,data1$data$g)
mu1e[,i] = est1$mu[[1]] - mu
Qe1[,i] = as.vector(est1$Q[[1]]) -  as.vector(data1$Q[[1]])
theta2e[i] = est1$theta2 - data1$theta2
sigma2e[1,i] = est1$sigma2i[[1]] - data1$sigma2[[1]]
}
dfmu1  =  data.frame(seq(1:M), t(mu1e))
dfQ1  =  data.frame(seq(1:M), t(Qe1))
dftheta  =  data.frame(seq(1:M), theta2e)
dfsigma1  =  data.frame(seq(1:M),sigma2e[1,])
dfmu  =  dfmu1
colnames(dfmu)  =  c("n.sim",paste("mu[",1:p,"]",sep=""))
dfmu  =  dfmu %>%
gather(coefs,  value,   - c("n.sim"))
dfmu$coefs2="mu"
dfQ  =  dfQ1
colnames(dfQ)  =  c("n.sim",paste("Q[",1:(p*q),"]",sep=""))
dfQ  =  dfQ %>%
gather(coefs,  value,   - c("n.sim"))
dfQ$coefs2="Q"
colnames(dfsigma1)=  c("n.sim","value")
dfsigma  =  dfsigma1
colnames(dfsigma)  =  c("n.sim","value")
dfsigma$coefs="sigma"
dfsigma$coefs2="sigma"
colnames(dfsigma)  =  c("n.sim","value","coefs","coefs2")
dfsigma=dfsigma[,c(1,3,2,4)]
df = rbind(dfmu,dfQ,dfsigma)
library(ggplot2)
library(ggpubr)
#df$prettycoefs = factor(df$coefs,  c("beta0", "beta1", "sigma0", "sigma1"),  c("hat(beta)[0]", "hat(beta)[1]", "hat(sigma)[0]^2", "hat(sigma)[1]^2"))
#df$prettycont = df$cont
#df$prettymethod = df$method
#cols2  =  c("Scopt" = "#009E73")
#lt2  =  c("Scopt" = "solid")
#shaps2  =  c("Scopt" = 2)
X11()
mu  =  ggplot(data = as.data.frame(df[df$coefs2 == "mu", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
#geom_boxplot(aes(fill = G)) + labs(fill = "Groupe") +
geom_hline(yintercept = 0) +
xlab(quote(mu)) +
ylab(quote(hat(mu))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
mu
X11()
Q  =  ggplot(data = as.data.frame(df[df$coefs2 == "Q", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_hline(yintercept = 0) +
xlab(quote(Q)) +
ylab(quote(hat(Q))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
Q
X11()
sigma  =  ggplot(data = as.data.frame(df[df$coefs2 == "sigma", ]),   aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_hline(yintercept = 0) +
xlab(quote(sigma)) +
ylab(quote(hat(sigma))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
sigma
df
X11()
mu  =  ggplot(data = as.data.frame(df[df$coefs2 == "mu", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
#geom_boxplot(aes(fill = G)) + labs(fill = "Groupe") +
geom_hline(yintercept = 0) +
xlab(quote(mu)) +
ylab(quote(hat(mu))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
mu
df$coefs2
df$value
mu  =  ggplot(data = as.data.frame(df[df$coefs2 == "mu", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y")
mu
X11()
mu  =  ggplot(data = as.data.frame(df[df$coefs2 == "mu", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
#geom_boxplot(aes(fill = G)) + labs(fill = "Groupe") +
geom_hline(yintercept = 0) +
xlab(quote(mu)) +
ylab(quote(hat(mu)))
mu
X11()
mu  =  ggplot(data = as.data.frame(df[df$coefs2 == "mu", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(mu)) +
ylab(quote(hat(mu))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
mu
X11()
Q  =  ggplot(data = as.data.frame(df[df$coefs2 == "Q", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(Q)) +
ylab(quote(hat(Q))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
Q
X11()
mu  =  ggplot(data = as.data.frame(df[df$coefs2 == "mu", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(mu)) +
ylab(quote(hat(mu))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
mu
X11()
sigma  =  ggplot(data = as.data.frame(df[df$coefs2 == "sigma", ]),   aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(sigma)) +
ylab(quote(hat(sigma))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
sigma
df2=df[df$coefs2 == "sigma", ]
df$value
X11()
sigma  =  ggplot(data = as.data.frame(df[df$coefs2 == "sigma", ]),   aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(sigma - sigma)) +
ylab(quote(hat(sigma))) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
sigma
X11()
sigma  =  ggplot(data = as.data.frame(df[df$coefs2 == "sigma", ]),   aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(sigma)) +
ylab(quote(hat(sigma)- sigma )) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
sigma
X11()
Q  =  ggplot(data = as.data.frame(df[df$coefs2 == "Q", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(Q)) +
ylab(quote(hat(Q) - Q)) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
Q
X11()
mu  =  ggplot(data = as.data.frame(df[df$coefs2 == "mu", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(mu)) +
ylab(quote(hat(mu)) - mu) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
X11()
mu  =  ggplot(data = as.data.frame(df[df$coefs2 == "mu", ]),  aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(mu)) +
ylab(quote(hat(mu) - mu)) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
mu
dfmu1  =  data.frame(seq(1:M), t(mu1e))
dfQ1  =  data.frame(seq(1:M), t(Qe1))
dftheta  =  data.frame(seq(1:M), theta2e)
dfsigma1  =  data.frame(seq(1:M),sigma2e[1,])
dfmu  =  dfmu1
colnames(dfmu)  =  c("n.sim",paste("mu[",1:p,"]",sep=""))
dfmu  =  dfmu %>%
gather(coefs,  value,   - c("n.sim"))
dfmu$coefs2="mu"
dfQ  =  dfQ1
colnames(dfQ)  =  c("n.sim",paste("Q[",1:(p*q),"]",sep=""))
dfQ  =  dfQ %>%
gather(coefs,  value,   - c("n.sim"))
dfQ$coefs2="Q"
colnames(dfsigma1)=  c("n.sim","value")
dfsigma  =  dfsigma1
colnames(dfsigma)  =  c("n.sim","value")
dfsigma$coefs="sigma"
dfsigma$coefs2="sigma"
colnames(dftheta)  =  c("n.sim","value","coefs","coefs2")
dfmu1  =  data.frame(seq(1:M), t(mu1e))
dfQ1  =  data.frame(seq(1:M), t(Qe1))
dftheta  =  data.frame(seq(1:M), theta2e)
dfsigma1  =  data.frame(seq(1:M),sigma2e[1,])
dfmu  =  dfmu1
colnames(dfmu)  =  c("n.sim",paste("mu[",1:p,"]",sep=""))
dfmu  =  dfmu %>%
gather(coefs,  value,   - c("n.sim"))
dfmu$coefs2="mu"
dfQ  =  dfQ1
colnames(dfQ)  =  c("n.sim",paste("Q[",1:(p*q),"]",sep=""))
dfQ  =  dfQ %>%
gather(coefs,  value,   - c("n.sim"))
dfQ$coefs2="Q"
colnames(dfsigma1)=  c("n.sim","value")
dfsigma  =  dfsigma1
colnames(dfsigma)  =  c("n.sim","value")
dfsigma$coefs="sigma"
dfsigma$coefs2="sigma"
colnames(dfsigma)  =  c("n.sim","value","coefs","coefs2")
dfsigma=dfsigma[,c(1,3,2,4)]
colnames(dftheta1)=  c("n.sim","value")
dfmu1  =  data.frame(seq(1:M), t(mu1e))
dfQ1  =  data.frame(seq(1:M), t(Qe1))
dftheta  =  data.frame(seq(1:M), theta2e)
dfsigma1  =  data.frame(seq(1:M),sigma2e[1,])
dfmu  =  dfmu1
colnames(dfmu)  =  c("n.sim",paste("mu[",1:p,"]",sep=""))
dfmu  =  dfmu %>%
gather(coefs,  value,   - c("n.sim"))
dfmu$coefs2="mu"
dfQ  =  dfQ1
colnames(dfQ)  =  c("n.sim",paste("Q[",1:(p*q),"]",sep=""))
dfQ  =  dfQ %>%
gather(coefs,  value,   - c("n.sim"))
dfQ$coefs2="Q"
colnames(dfsigma1)=  c("n.sim","value")
dfsigma  =  dfsigma1
colnames(dfsigma)  =  c("n.sim","value")
dfsigma$coefs="sigma"
dfsigma$coefs2="sigma"
colnames(dfsigma)  =  c("n.sim","value","coefs","coefs2")
dfsigma=dfsigma[,c(1,3,2,4)]
colnames(dfsigma1)=  c("n.sim","value")
dftheta  =  dftheta1
dfmu1  =  data.frame(seq(1:M), t(mu1e))
dfQ1  =  data.frame(seq(1:M), t(Qe1))
dftheta1  =  data.frame(seq(1:M), theta2e)
dfsigma1  =  data.frame(seq(1:M),sigma2e[1,])
dfmu  =  dfmu1
colnames(dfmu)  =  c("n.sim",paste("mu[",1:p,"]",sep=""))
dfmu  =  dfmu %>%
gather(coefs,  value,   - c("n.sim"))
dfmu$coefs2="mu"
dfQ  =  dfQ1
colnames(dfQ)  =  c("n.sim",paste("Q[",1:(p*q),"]",sep=""))
dfQ  =  dfQ %>%
gather(coefs,  value,   - c("n.sim"))
dfQ$coefs2="Q"
colnames(dfsigma1)=  c("n.sim","value")
dfsigma  =  dfsigma1
colnames(dfsigma)  =  c("n.sim","value")
dfsigma$coefs="sigma"
dfsigma$coefs2="sigma"
colnames(dfsigma)  =  c("n.sim","value","coefs","coefs2")
dfsigma=dfsigma[,c(1,3,2,4)]
colnames(dfsigma1)=  c("n.sim","value")
dftheta  =  dftheta1
colnames(dftheta)  =  c("n.sim","value")
dftheta$coefs="sigma"
dftheta$coefs2="sigma"
colnames(dftheta)  =  c("n.sim","value","coefs","coefs2")
dftheta=dftheta[,c(1,3,2,4)]
df = rbind(dfmu,dfQ,dfsigma,dftheta)
X11()
theta  =  ggplot(data = as.data.frame(df[df$coefs2 == "theta", ]),   aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(theta)) +
ylab(quote(hat(theta)- theta )) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
theta
dftheta$value
dfmu1  =  data.frame(seq(1:M), t(mu1e))
dfQ1  =  data.frame(seq(1:M), t(Qe1))
dftheta1  =  data.frame(seq(1:M), theta2e)
dfsigma1  =  data.frame(seq(1:M),sigma2e[1,])
dfmu  =  dfmu1
colnames(dfmu)  =  c("n.sim",paste("mu[",1:p,"]",sep=""))
dfmu  =  dfmu %>%
gather(coefs,  value,   - c("n.sim"))
dfmu$coefs2="mu"
dfQ  =  dfQ1
colnames(dfQ)  =  c("n.sim",paste("Q[",1:(p*q),"]",sep=""))
dfQ  =  dfQ %>%
gather(coefs,  value,   - c("n.sim"))
dfQ$coefs2="Q"
colnames(dfsigma1)=  c("n.sim","value")
dfsigma  =  dfsigma1
colnames(dfsigma)  =  c("n.sim","value")
dfsigma$coefs="sigma"
dfsigma$coefs2="sigma"
colnames(dfsigma)  =  c("n.sim","value","coefs","coefs2")
dfsigma=dfsigma[,c(1,3,2,4)]
colnames(dfsigma1)=  c("n.sim","value")
dftheta  =  dftheta1
colnames(dftheta)  =  c("n.sim","value")
dftheta$coefs="theta"
dftheta$coefs2="theta"
colnames(dftheta)  =  c("n.sim","value","coefs","coefs2")
dftheta=dftheta[,c(1,3,2,4)]
df = rbind(dfmu,dfQ,dfsigma,dftheta)
X11()
theta  =  ggplot(data = as.data.frame(df[df$coefs2 == "theta", ]),   aes(x = coefs2,  y = value)) +
facet_grid( ~ coefs,
labeller = label_parsed,
scales = "free_y") +
geom_boxplot() +
geom_hline(yintercept = 0) +
xlab(quote(theta)) +
ylab(quote(hat(theta)- theta )) +
theme_bw() + theme(axis.text.x = element_blank(),axis.ticks = element_blank()) +
theme(legend.position = "top")
theta
elec=read.csv("C:\\Users\\vagares\\Google Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2022-2023\\donnees\\election.csv",header=T,row.names=1,sep=";")
X=elec
tab=cbind(X,Total=apply(X,1,sum))
tab=rbind(tab,Total=apply(tab,2,sum))
tb <- xtable(tab, digits=0,"desc1",caption="Résultats des élections présidentielles de 2007 par région")
library(xtable)
library(tikzDevice)
#getOption
library(xtable)
cocktail <- read.table("C:\\Users\\vagares\\Google Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2022-2023\\donnees\\cocktail.csv", header = TRUE, sep=";",row.names=1, dec=".")
read.table("G:\\Mon Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2022-2023\\donnees\\cocktail.csv", header = TRUE, sep=";",row.names=1, dec=".")
library(xtable)
cocktail <- read.table("G:\\Mon Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2022-2023\\donnees\\cocktail.csv", header = TRUE, sep=";",row.names=1, dec=".")
# cocktail=read.csv2("cocktail.csv", header=TRUE, row.names=1, dec=".")
#colnames(cocktail)[15:18]=c("% orange","% banane","% mangue"," % citron")
colnames(cocktail)[15:18]=c("P.c orange"," P.c banane","P.c mangue","P.c citron")
tb <- xtable(cocktail[1:5,1:14],"desc1",caption="Evaluation sensorielle de 16 cocktails de fruits. Variables correspondant à des  descripteurs sensoriels et la variabe colorant. Toutes les lignes  ne sont pas affichées")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
tb <- xtable(cocktail[1:5,15:18],"desc1",caption="Evaluation sensorielle de 16 cocktails de fruits. Variables de composition. Toutes les lignes ne sont pas affichées")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
tb <- xtable(cocktail[1:5,19:28],"desc1",caption="Evaluation sensorielle de 16 cocktails de fruits. Variables physico-chimiques. Toutes les lignes  ne sont pas affichées")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
boxplot(cocktail[,1:13], names=colnames(cocktail[,1:13]))
boxplot(cocktail[,15:18], names=colnames(cocktail[,15:18]))
boxplot(cocktail[,19:28], names=colnames(cocktail[,19:28]))
cor=round(cor(cocktail[,1:13]),2)
tb <- xtable(cor,"desc1",caption="Matrice de corrélation")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
elec=read.csv("C:\\Users\\vagares\\Google Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2022-2023\\donnees\\election.csv",header=T,row.names=1,sep=";")
X=elec
tab=cbind(X,Total=apply(X,1,sum))
tab=rbind(tab,Total=apply(tab,2,sum))
tb <- xtable(tab, digits=0,"desc1",caption="Résultats des élections présidentielles de 2007 par région")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
# Fr?quence + les marginales
F=X/sum(X)*100
tb = xtable(tab/sum(X)*100, digits=2,"Tableau des fréquences et marginales")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
# Tableau des profils-lignes en pourcentage
prof_ligne=F/apply(F,1,sum)*100
tab2=cbind(prof_ligne,Total=apply(prof_ligne,1,sum))
tab2=rbind(prof_ligne,Total=round(apply(tab,2,sum),2))
tab2=cbind(prof_ligne,Total=apply(prof_ligne,1,sum))
tab2=rbind(prof_ligne,Total=round(apply(tab,1,sum),2))
elec=read.csv("C:\\Users\\vagares\\Google Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2022-2023\\donnees\\election.csv",header=T,row.names=1,sep=";")
X=elec
tab=cbind(X,Total=apply(X,1,sum))
tab=rbind(tab,Total=apply(tab,2,sum))
tb <- xtable(tab, digits=0,"desc1",caption="Résultats des élections présidentielles de 2007 par région")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
F=X/sum(X)*100
tb = xtable(tab/sum(X)*100, digits=2,"Tableau des fréquences et marginales")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
# Tableau des profils-lignes en pourcentage
prof_ligne=F/apply(F,1,sum)*100
tab2=cbind(prof_ligne,Total=apply(prof_ligne,1,sum))
tab2=rbind(prof_ligne,Total=round(apply(tab,1,sum),2))
round(apply(tab,1,sum),2)
tab2=rbind(prof_ligne,Total=c(round(apply(tab,1,sum),2),1))
length(c(round(apply(tab,1,sum),2),1))
dim(tab2)
elec=read.csv("C:\\Users\\vagares\\Google Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2022-2023\\donnees\\election.csv",header=T,row.names=1,sep=";")
X=elec
tab=cbind(X,Total=apply(X,1,sum))
tab=rbind(tab,Total=apply(tab,2,sum))
tb <- xtable(tab, digits=0,"desc1",caption="Résultats des élections présidentielles de 2007 par région")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
# Fr?quence + les marginales
F=X/sum(X)*100
tb = xtable(tab/sum(X)*100, digits=2,"Tableau des fréquences et marginales")
print(tb,include.rownames=TRUE,  sanitize.text.function = function(x){x},tabular.environment='longtable', hline.after = c(-1,0),floating=FALSE,size="\\tiny")
# Tableau des profils-lignes en pourcentage
prof_ligne=F/apply(F,1,sum)*100
tab2=cbind(prof_ligne,Total=apply(prof_ligne,1,sum))
dim(tab2)
dim(prof_ligne)
sum(round(apply(tab,1,sum),2))
round(apply(tab,1,sum),2)
round(apply(F,2,sum),2)
round(apply(F,1,sum),2)
sum(round(apply(F,1,sum),2))
tab2=rbind(tab2,Total=c(round(apply(F,2,sum),2),1))
temperature <- read.table("http://factominer.free.fr/livre/temperat.csv",header=TRUE, sep=";", dec=".", row.names=1)
tb <- xtable(temperature,"desc1",caption="Tableau de données sur les températures dans les villes européennes")
print(tb,,size="\\scriptsize")
Y=as.matrix(temperature)-rep(1,nrow(temperature))%*%t(apply(temperature,2,mean))
as.matrix(temperature)
nrow(temperature)
apply(temperature,2,mean)
Y=as.matrix(temperature)-rep(1,nrow(temperature))%*%t(apply(temperature,2,mean))
# Centrer les données
Y=as.matrix(temperature)-rep(1,nrow(temperature))%*%t(apply(as.matrix(temperature),2,mean))
head(temperature)
Y=as.matrix(temperature[,1:12])-rep(1,nrow(temperature[,1:12]))%*%t(apply(temperature[,1:12],2,mean))
# apply(Y,2,mean)
cov_X=t(Y)%*%Y/nrow(temperature[,1:12])
# Réduction des données
ec<-function(x)
{
return(sqrt(mean(x^2)-(mean(x))^2))
}
Z=Y/(rep(1,nrow(temperature[,1:12]))%*%t(apply(X,2,ec)))
Z=Y/(rep(1,nrow(temperature[,1:12]))%*%t(apply(temperature[,1:12],2,ec)))
tb <- xtable(Z,"desc1",caption="Tableau de données centrées réduites")
print(tb,,size="\\scriptsize")
temperature <- read.table("http://factominer.free.fr/livre/temperat.csv",header=TRUE, sep=";", dec=".", row.names=1)
tb <- xtable(as.matrix(temperature),"desc1",caption="Tableau de données sur les températures dans les villes européennes")
print(tb,,size="\\scriptsize")
antal=read.csv("C:\\Users\\vagares\\Google Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2023-2024\\donnees\\antal.dat",header=T,row.names=1,sep=";")
antal=read.csv("G:\\Mon Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2023-2024\\donnees\\antal.dat",header=T,row.names=1,sep=";")
antal=read.csv("G:\\Mon Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2023-2024\\donnees\\antal.dat",header=T,row.names=1)
antal=read.table("G:\\Mon Drive\\2_Enseignement\\GM3A_Analyse des donnees\\Examen\\2023-2024\\donnees\\antal.dat",header=T,row.names=1)
X=antal
res <- PCA(temperature, ind.sup=24:35, quanti.sup=13:16, quali.sup=17)
library(FactoMineR)
res <- PCA(temperature, ind.sup=24:35, quanti.sup=13:16, quali.sup=17)
plot.PCA(res, choix="ind", habillage=17)
library(FactoMineR)
res <- PCA(temperature, ind.sup=24:35, quanti.sup=13:16, quali.sup=17)
plot.PCA(res, choix="ind", habillage=17)
eig = res$eig
tb <- xtable(eig,"desc1",caption="Valeurs propres de la matrice de corrélation")
print(tb)
boxplot(temperature[,1:12], names=colnames(temperature[,1:12]))
colnames(temperature[,1:12])
boxplot(temperature[,1:12], names=colnames(temperature[,1:12]))
res <- PCA(temperature, ind.sup=24:35, quanti.sup=13:16, quali.sup=17)
plot.PCA(res, choix="ind", habillage=17)
eig = res$eig
tb <- xtable(eig,"desc1",caption="Valeurs propres de la matrice de corrélation")
print(tb)
temps2
temp2 = temperature[,1:12]
temp2
temp2 = temperature[,1:12]
boxplot(temp2, names=colnames(temp2))
temp2 = data.frame(temperature[,1:12])
boxplot(temp2, names=colnames(temp2))
dim(temperature)
res <- PCA(temperature, ind.sup=24:35, quanti.sup=13:16, quali.sup=17)
plot.PCA(res, choix="ind", habillage=17)
eig = res$eig
tb <- xtable(eig,"desc1",caption="Valeurs propres de la matrice de corrélation")
print(tb)
